//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 27.11.2013 10:36:25
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

namespace ParusModelLite
{
    using System.ComponentModel;

    using Halfblood.Common;

    /// <summary>
    /// There are no comments for ParusModelLite.DeficiencyLiteDto, ParusModelLite in the schema.
    /// </summary>
    public partial class DeficiencyLiteDto : INotifyPropertyChanging, INotifyPropertyChanged, IDto<long>
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private long _Rn;

        private string _dse;

        private string _ExecutionKind;

        private string _IdentifierAccessories;

        private string _AccountingOrder;

        private System.Nullable<int> _NumberOfTheMove;

        private string _Department;

        private string _StageWorkshopManufacturer;

        private string _Area;

        private string _StageArea;

        private string _ShopRecipient;

        private string _StageShopRecipient;

        private string _LabelAccounting;

        private System.Nullable<int> _ConditionForDetailsFromTheBeginningOfTheYear;

        private System.Nullable<int> _ThePresenceOfTheWorkpiece;

        private System.Nullable<int> _TheNeedForAnAgreement;

        private System.Nullable<int> _DemandForGoods;

        private System.Nullable<int> _NeedToPlanMonth;

        private System.Nullable<int> _TheNeedForPlanYear;

        private System.Nullable<int> _NeedFloatingYear;

        private System.Nullable<int> _DSECodeBaseOfTheMMB;

        private string _CodeOfDSENomZy;

        private System.Nullable<decimal> _ProcessingAidForTheContract;

        private System.Nullable<decimal> _ProcessingAidForTheGoods;

        private System.Nullable<decimal> _ProcessingAidPlanForMonths;

        private string _dseCompressed;

        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        #endregion
        /// <summary>
        /// There are no comments for DeficiencyLiteDto constructor in the schema.
        /// </summary>
        public DeficiencyLiteDto()
        {
            OnCreated();
        }

        public virtual string DSECompressed
        {
            get
            {
                return this._dseCompressed;
            }
            set
            {
                if (this._dseCompressed != value)
                {
                    this.SendPropertyChanging();
                    this._dseCompressed = value;
                    this.SendPropertyChanged("DSECompressed");
                }
            }
        }

        /// <summary>
        /// There are no comments for Rn in the schema.
        /// </summary>
        public virtual long Rn
        {
            get
            {
                return this._Rn;
            }
            set
            {
                if (this._Rn != value)
                {
                    this.SendPropertyChanging();
                    this._Rn = value;
                    this.SendPropertyChanged("Rn");
                }
            }
        }


        /// <summary>
        /// There are no comments for DSE in the schema.
        /// </summary>
        public virtual string DSE
        {
            get
            {
                return this._dse;
            }
            set
            {
                if (this._dse != value)
                {
                    this.SendPropertyChanging();
                    this._dse = value;
                    this.SendPropertyChanged("DSE");
                }
            }
        }


        /// <summary>
        /// There are no comments for ExecutionKind in the schema.
        /// </summary>
        public virtual string ExecutionKind
        {
            get
            {
                return this._ExecutionKind;
            }
            set
            {
                if (this._ExecutionKind != value)
                {
                    this.SendPropertyChanging();
                    this._ExecutionKind = value;
                    this.SendPropertyChanged("ExecutionKind");
                }
            }
        }


        /// <summary>
        /// There are no comments for IdentifierAccessories in the schema.
        /// </summary>
        public virtual string IdentifierAccessories
        {
            get
            {
                return this._IdentifierAccessories;
            }
            set
            {
                if (this._IdentifierAccessories != value)
                {
                    this.SendPropertyChanging();
                    this._IdentifierAccessories = value;
                    this.SendPropertyChanged("IdentifierAccessories");
                }
            }
        }


        /// <summary>
        /// There are no comments for AccountingOrder in the schema.
        /// </summary>
        public virtual string AccountingOrder
        {
            get
            {
                return this._AccountingOrder;
            }
            set
            {
                if (this._AccountingOrder != value)
                {
                    this.SendPropertyChanging();
                    this._AccountingOrder = value;
                    this.SendPropertyChanged("AccountingOrder");
                }
            }
        }


        /// <summary>
        /// There are no comments for NumberOfTheMove in the schema.
        /// </summary>
        public virtual System.Nullable<int> NumberOfTheMove
        {
            get
            {
                return this._NumberOfTheMove;
            }
            set
            {
                if (this._NumberOfTheMove != value)
                {
                    this.SendPropertyChanging();
                    this._NumberOfTheMove = value;
                    this.SendPropertyChanged("NumberOfTheMove");
                }
            }
        }


        /// <summary>
        /// There are no comments for Department in the schema.
        /// </summary>
        public virtual string Department
        {
            get
            {
                return this._Department;
            }
            set
            {
                if (this._Department != value)
                {
                    this.SendPropertyChanging();
                    this._Department = value;
                    this.SendPropertyChanged("Department");
                }
            }
        }


        /// <summary>
        /// There are no comments for StageWorkshopManufacturer in the schema.
        /// </summary>
        public virtual string StageWorkshopManufacturer
        {
            get
            {
                return this._StageWorkshopManufacturer;
            }
            set
            {
                if (this._StageWorkshopManufacturer != value)
                {
                    this.SendPropertyChanging();
                    this._StageWorkshopManufacturer = value;
                    this.SendPropertyChanged("StageWorkshopManufacturer");
                }
            }
        }


        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        public virtual string Area
        {
            get
            {
                return this._Area;
            }
            set
            {
                if (this._Area != value)
                {
                    this.SendPropertyChanging();
                    this._Area = value;
                    this.SendPropertyChanged("Area");
                }
            }
        }


        /// <summary>
        /// There are no comments for StageArea in the schema.
        /// </summary>
        public virtual string StageArea
        {
            get
            {
                return this._StageArea;
            }
            set
            {
                if (this._StageArea != value)
                {
                    this.SendPropertyChanging();
                    this._StageArea = value;
                    this.SendPropertyChanged("StageArea");
                }
            }
        }


        /// <summary>
        /// There are no comments for ShopRecipient in the schema.
        /// </summary>
        public virtual string ShopRecipient
        {
            get
            {
                return this._ShopRecipient;
            }
            set
            {
                if (this._ShopRecipient != value)
                {
                    this.SendPropertyChanging();
                    this._ShopRecipient = value;
                    this.SendPropertyChanged("ShopRecipient");
                }
            }
        }


        /// <summary>
        /// There are no comments for StageShopRecipient in the schema.
        /// </summary>
        public virtual string StageShopRecipient
        {
            get
            {
                return this._StageShopRecipient;
            }
            set
            {
                if (this._StageShopRecipient != value)
                {
                    this.SendPropertyChanging();
                    this._StageShopRecipient = value;
                    this.SendPropertyChanged("StageShopRecipient");
                }
            }
        }


        /// <summary>
        /// There are no comments for LabelAccounting in the schema.
        /// </summary>
        public virtual string LabelAccounting
        {
            get
            {
                return this._LabelAccounting;
            }
            set
            {
                if (this._LabelAccounting != value)
                {
                    this.SendPropertyChanging();
                    this._LabelAccounting = value;
                    this.SendPropertyChanged("LabelAccounting");
                }
            }
        }


        /// <summary>
        /// There are no comments for ConditionForDetailsFromTheBeginningOfTheYear in the schema.
        /// </summary>
        public virtual System.Nullable<int> ConditionForDetailsFromTheBeginningOfTheYear
        {
            get
            {
                return this._ConditionForDetailsFromTheBeginningOfTheYear;
            }
            set
            {
                if (this._ConditionForDetailsFromTheBeginningOfTheYear != value)
                {
                    this.SendPropertyChanging();
                    this._ConditionForDetailsFromTheBeginningOfTheYear = value;
                    this.SendPropertyChanged("ConditionForDetailsFromTheBeginningOfTheYear");
                }
            }
        }


        /// <summary>
        /// There are no comments for ThePresenceOfTheWorkpiece in the schema.
        /// </summary>
        public virtual System.Nullable<int> ThePresenceOfTheWorkpiece
        {
            get
            {
                return this._ThePresenceOfTheWorkpiece;
            }
            set
            {
                if (this._ThePresenceOfTheWorkpiece != value)
                {
                    this.SendPropertyChanging();
                    this._ThePresenceOfTheWorkpiece = value;
                    this.SendPropertyChanged("ThePresenceOfTheWorkpiece");
                }
            }
        }


        /// <summary>
        /// There are no comments for TheNeedForAnAgreement in the schema.
        /// </summary>
        public virtual System.Nullable<int> TheNeedForAnAgreement
        {
            get
            {
                return this._TheNeedForAnAgreement;
            }
            set
            {
                if (this._TheNeedForAnAgreement != value)
                {
                    this.SendPropertyChanging();
                    this._TheNeedForAnAgreement = value;
                    this.SendPropertyChanged("TheNeedForAnAgreement");
                }
            }
        }


        /// <summary>
        /// There are no comments for DemandForGoods in the schema.
        /// </summary>
        public virtual System.Nullable<int> DemandForGoods
        {
            get
            {
                return this._DemandForGoods;
            }
            set
            {
                if (this._DemandForGoods != value)
                {
                    this.SendPropertyChanging();
                    this._DemandForGoods = value;
                    this.SendPropertyChanged("DemandForGoods");
                }
            }
        }


        /// <summary>
        /// There are no comments for NeedToPlanMonth in the schema.
        /// </summary>
        public virtual System.Nullable<int> NeedToPlanMonth
        {
            get
            {
                return this._NeedToPlanMonth;
            }
            set
            {
                if (this._NeedToPlanMonth != value)
                {
                    this.SendPropertyChanging();
                    this._NeedToPlanMonth = value;
                    this.SendPropertyChanged("NeedToPlanMonth");
                }
            }
        }


        /// <summary>
        /// There are no comments for TheNeedForPlanYear in the schema.
        /// </summary>
        public virtual System.Nullable<int> TheNeedForPlanYear
        {
            get
            {
                return this._TheNeedForPlanYear;
            }
            set
            {
                if (this._TheNeedForPlanYear != value)
                {
                    this.SendPropertyChanging();
                    this._TheNeedForPlanYear = value;
                    this.SendPropertyChanged("TheNeedForPlanYear");
                }
            }
        }


        /// <summary>
        /// There are no comments for NeedFloatingYear in the schema.
        /// </summary>
        public virtual System.Nullable<int> NeedFloatingYear
        {
            get
            {
                return this._NeedFloatingYear;
            }
            set
            {
                if (this._NeedFloatingYear != value)
                {
                    this.SendPropertyChanging();
                    this._NeedFloatingYear = value;
                    this.SendPropertyChanged("NeedFloatingYear");
                }
            }
        }


        /// <summary>
        /// There are no comments for DSECodeBaseOfTheMMB in the schema.
        /// </summary>
        public virtual System.Nullable<int> DSECodeBaseOfTheMMB
        {
            get
            {
                return this._DSECodeBaseOfTheMMB;
            }
            set
            {
                if (this._DSECodeBaseOfTheMMB != value)
                {
                    this.SendPropertyChanging();
                    this._DSECodeBaseOfTheMMB = value;
                    this.SendPropertyChanged("DSECodeBaseOfTheMMB");
                }
            }
        }


        /// <summary>
        /// There are no comments for CodeOfDSENomZy in the schema.
        /// </summary>
        public virtual string CodeOfDSENomZy
        {
            get
            {
                return this._CodeOfDSENomZy;
            }
            set
            {
                if (this._CodeOfDSENomZy != value)
                {
                    this.SendPropertyChanging();
                    this._CodeOfDSENomZy = value;
                    this.SendPropertyChanged("CodeOfDSENomZy");
                }
            }
        }


        /// <summary>
        /// There are no comments for ProcessingAidForTheContract in the schema.
        /// </summary>
        public virtual System.Nullable<decimal> ProcessingAidForTheContract
        {
            get
            {
                return this._ProcessingAidForTheContract;
            }
            set
            {
                if (this._ProcessingAidForTheContract != value)
                {
                    this.SendPropertyChanging();
                    this._ProcessingAidForTheContract = value;
                    this.SendPropertyChanged("ProcessingAidForTheContract");
                }
            }
        }


        /// <summary>
        /// There are no comments for ProcessingAidForTheGoods in the schema.
        /// </summary>
        public virtual System.Nullable<decimal> ProcessingAidForTheGoods
        {
            get
            {
                return this._ProcessingAidForTheGoods;
            }
            set
            {
                if (this._ProcessingAidForTheGoods != value)
                {
                    this.SendPropertyChanging();
                    this._ProcessingAidForTheGoods = value;
                    this.SendPropertyChanged("ProcessingAidForTheGoods");
                }
            }
        }


        /// <summary>
        /// There are no comments for ProcessingAidPlanForMonths in the schema.
        /// </summary>
        public virtual System.Nullable<decimal> ProcessingAidPlanForMonths
        {
            get
            {
                return this._ProcessingAidPlanForMonths;
            }
            set
            {
                if (this._ProcessingAidPlanForMonths != value)
                {
                    this.SendPropertyChanging();
                    this._ProcessingAidPlanForMonths = value;
                    this.SendPropertyChanged("ProcessingAidPlanForMonths");
                }
            }
        }

        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName)
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        object IHasUid.Rn
        {
            get { return Rn; }
        }

        public override string ToString()
        {
            return DSE;
        }
    }
}
