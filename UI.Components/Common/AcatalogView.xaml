<UserControl x:Class="UI.Components.Common.AcatalogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:commonDomain="clr-namespace:Buisness.Entities.CommonDomain;assembly=Buisness.Entities"
             xmlns:converters="clr-namespace:UI.Components.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             Name="Root"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <Grid>
                            <Border x:Name="ValidationErrorElement"
                                    BorderBrush="{DynamicResource ControlsValidationBrush}"
                                    BorderThickness="1"
                                    Canvas.ZIndex="1"
                                    Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Placement="Right"
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Template="{DynamicResource ValidationToolTipTemplate}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <system:Boolean>true</system:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Width="12"
                                      Height="12"
                                      Margin="1,-4,-4,0"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"
                                      Background="Transparent">
                                    <Path Margin="1,3,0,0"
                                          Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                          Fill="{DynamicResource ValidationBrush5}" />
                                    <Path Margin="1,3,0,0"
                                          Data="M 0,0 L2,0 L 8,6 L8,8"
                                          Fill="{DynamicResource WhiteColorBrush}" />
                                </Grid>
                            </Border>
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter TargetName="ValidationErrorElement" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Validation.HasError" Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="validationTooltip" Property="IsOpen" Value="True" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>

    <Grid x:Name="RootGrid">
        <Grid.Resources>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        </Grid.Resources>

        <xctk:DropDownButton HorizontalContentAlignment="Stretch" Content="{Binding Path=SelectedItem, ElementName=Root, Mode=TwoWay}">
            <xctk:DropDownButton.Style>
                <Style TargetType="{x:Type xctk:DropDownButton}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                    <Setter Property="MinHeight" Value="26" />
                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                                <Grid Name="MainGrid" SnapsToDevicePixels="True">
                                    <ToggleButton Name="PART_DropDownButton"
                                                  IsChecked="{Binding IsOpen,
                                                                      RelativeSource={RelativeSource TemplatedParent},
                                                                      Mode=TwoWay}"
                                                  IsHitTestVisible="{Binding IsOpen,
                                                                             RelativeSource={RelativeSource TemplatedParent},
                                                                             Converter={StaticResource InverseBoolConverter}}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                        <Grid>
                                            <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                                               RenderChecked="{TemplateBinding xctk:DropDownButton.IsOpen}"
                                                               RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                                               RenderMouseOver="{Binding IsMouseOver,
                                                                                         ElementName=PART_DropDownButton}"
                                                               RenderPressed="{Binding IsPressed,
                                                                                       ElementName=PART_DropDownButton}">
                                                <xctk:ButtonChrome.Style>
                                                    <Style TargetType="{x:Type xctk:ButtonChrome}">
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                                                        <Setter Property="BorderThickness" Value="1" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type xctk:ButtonChrome}">
                                                                    <Grid>
                                                                        <Border Name="OuterBorder"
                                                                                Background="{TemplateBinding Control.Background}"
                                                                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                CornerRadius="{TemplateBinding xctk:ButtonChrome.CornerRadius}">
                                                                            <Border Name="InnerBorder"
                                                                                    BorderBrush="{DynamicResource GrayBrush7}"
                                                                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding xctk:ButtonChrome.InnerCornerRadius}" />
                                                                        </Border>
                                                                        <Border Name="MouseOverVisual"
                                                                                Background="{DynamicResource GrayBrush7}"
                                                                                BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                CornerRadius="{TemplateBinding xctk:ButtonChrome.CornerRadius}"
                                                                                Opacity="0"
                                                                                Visibility="Collapsed">
                                                                            <Border Name="MouseOverInnerVisual"
                                                                                    BorderBrush="{DynamicResource GrayBrush7}"
                                                                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding xctk:ButtonChrome.InnerCornerRadius}" />
                                                                        </Border>
                                                                        <Border Name="PressedVisual"
                                                                                Background="{DynamicResource GrayBrush7}"
                                                                                BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                CornerRadius="{TemplateBinding xctk:ButtonChrome.CornerRadius}"
                                                                                Opacity="0"
                                                                                Visibility="Collapsed">
                                                                            <Border Name="PressedInnerVisual"
                                                                                    BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding xctk:ButtonChrome.InnerCornerRadius}" />
                                                                        </Border>
                                                                        <Border Name="FocusVisual"
                                                                                Background="{DynamicResource GrayBrush7}"
                                                                                BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                CornerRadius="{TemplateBinding xctk:ButtonChrome.CornerRadius}"
                                                                                Opacity="0"
                                                                                Visibility="Collapsed">
                                                                            <Border Name="FocusInnerVisual"
                                                                                    BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                                                                    BorderThickness="1"
                                                                                    CornerRadius="{TemplateBinding xctk:ButtonChrome.InnerCornerRadius}" />
                                                                        </Border>
                                                                        <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                                                                          Content="{TemplateBinding ContentControl.Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                                                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                                                                          IsEnabled="{TemplateBinding UIElement.IsEnabled}" />
                                                                    </Grid>

                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </xctk:ButtonChrome.Style>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                                      Content="{TemplateBinding ContentControl.Content}"
                                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                                      RecognizesAccessKey="True" />
                                                    <Grid Name="arrowGlyph"
                                                          Margin="4,3,4,3"
                                                          Column="1"
                                                          IsHitTestVisible="False">
                                                        <Path Name="Arrow"
                                                              Width="8"
                                                              Height="4"
                                                              Margin="0,0,6,0"
                                                              HorizontalAlignment="Right"
                                                              Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                                              Stretch="Uniform">
                                                            <Path.Fill>
                                                                <SolidColorBrush x:Name="BtnArrowColor" Color="{DynamicResource Gray3}" />
                                                            </Path.Fill>
                                                        </Path>
                                                    </Grid>
                                                </Grid>
                                            </xctk:ButtonChrome>
                                        </Grid>
                                    </ToggleButton>
                                    <Popup Name="PART_Popup"
                                           MinWidth="{Binding ActualWidth,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           HorizontalOffset="1"
                                           IsOpen="{Binding IsChecked,
                                                            ElementName=PART_DropDownButton}"
                                           Placement="Bottom"
                                           StaysOpen="False"
                                           VerticalOffset="1">
                                        <Border Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                Background="{DynamicResource WhiteBrush}"
                                                BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                                BorderThickness="1"
                                                Effect="{DynamicResource DropShadowBrush}">
                                            <ContentPresenter Name="PART_ContentPresenter"
                                                              Margin="4,0"
                                                              Content="{TemplateBinding xctk:DropDownButton.DropDownContent}" />
                                        </Border>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </xctk:DropDownButton.Style>
            <xctk:DropDownButton.DropDownContent>
                <TreeView x:Name="TrvAcatalog">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type commonDomain:CatalogHierarchical}" ItemsSource="{Binding Path=Childs}">
                            <TextBlock IsEnabled="{Binding Path=IsAccess}" Text="{Binding Path=Name}">
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource MetroTextBlock}" TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="Gray" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </xctk:DropDownButton.DropDownContent>
        </xctk:DropDownButton>
    </Grid>

</UserControl>